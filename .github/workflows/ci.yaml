name: Continuous Integration

on:
    push:
        branches: [ "master" ]
    pull_request:
        branches: [ "master" ]

env:
    CARGO_TERM_COLOR: always

jobs:
    bot:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v4
            -   name: Set up Rust caching
                uses: Swatinem/rust-cache@v2
                with:
                    prefix-key: "v0-rust"
                    shared-key: ""
                    key: ""
                    env-vars: "CARGO CC CFLAGS CXX CMAKE RUST"
                    workspaces: ". -> target"
                    cache-directories: ""
                    cache-targets: true
                    cache-on-failure: false
                    cache-all-crates: false
                    save-if: ${{ github.ref == 'refs/heads/master' }}
                    lookup-only: false
                    cache-provider: "github"
                    cache-bin: true
            -   name: Run fmt
                run: cargo fmt -- --check
            -   name: Build
                run: cargo build --verbose --release
            -   name: Run Clippy
                run: cargo clippy -- -D warnings
            -   name: Run tests
                run: cargo test --verbose
            -   uses: actions/upload-artifact@v4
                with:
                    name: ssps-discord-bot
                    path: target/release
    bot-docker:
        runs-on: ubuntu-latest
        needs: bot
        steps:
            -   uses: actions/checkout@v4
            -   name: Login to GitHub Container Registry
                uses: docker/login-action@v3
                with:
                    registry: ghcr.io
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}
            -   name: Set up QEMU
                uses: docker/setup-qemu-action@v3
            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3
            -   name: Download bot binary
                uses: actions/download-artifact@v4
                with:
                    name: ssps-discord-bot
                    path: target/release
            -   name: Build and push
                uses: docker/build-push-action@v3
                with:
                    context: .
                    file: ./release.Dockerfile
                    platforms: linux/amd64
                    push: true
                    # TODO: The tag should be the commit hash. IT SHOULD BE LATEST ONLY ON MASTER!
                    tags: ghcr.io/artifycz/ssps-discord-bot/ssps-discord-bot:latest
