name: Continuous Integration

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

env:
    CARGO_TERM_COLOR: always

jobs:
    bot:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_HOST: postgres
                    POSTGRES_USER: postgres
                    POSTGRES_DB: ssps-discord-bot
                    POSTGRES_PASSWORD: postgres
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432
        env:
            DATABASE_URL: postgres://postgres:postgres@localhost:5432/ssps-discord-bot
            DOCKER_METADATA_PR_HEAD_SHA: true
        steps:
            -   uses: actions/checkout@v4
            -   name: Set up Rust caching
                uses: Swatinem/rust-cache@v2
                with:
                    prefix-key: "v0-rust"
                    shared-key: ""
                    key: ""
                    env-vars: "CARGO CC CFLAGS CXX CMAKE RUST"
                    workspaces: ". -> target"
                    cache-directories: ""
                    cache-targets: true
                    cache-on-failure: false
                    cache-all-crates: false
                    save-if: ${{ github.ref == 'refs/heads/master' }}
                    lookup-only: false
                    cache-provider: "github"
                    cache-bin: true
            -   name: Install SQLx CLI
                uses: baptiste0928/cargo-install@v3
                with:
                    crate: sqlx-cli
                    version: "^0.8.5"
            -   name: Install Clippy Tracing
                uses: baptiste0928/cargo-install@v3
                with:
                    crate: clippy-tracing
                    version: "^0.7.0"
            -   name: Run fmt
                run: cargo fmt -- --check
            -   name: Apply migrations
                run: cd infrastructure && sqlx migrate run
            -   name: Build
                run: cargo build --verbose --release
            -   name: Run Clippy
                run: cargo clippy -- -D warnings
            -   name: Run Clippy Tracing
                run: clippy-tracing --action check
            -   name: Run tests
                run: cargo test --verbose

            -   name: Docker meta
                id: meta
                uses: docker/metadata-action@v5
                with:
                    images: |
                        ghcr.io/artifycz/ssps-discord-bot/ssps-discord-bot
                    tags: |
                        type=ref,event=branch
                        type=ref,event=pr
                        type=sha,format=long
            -   name: Login to GitHub Container Registry
                uses: docker/login-action@v3
                with:
                    registry: ghcr.io
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}
            -   name: Set up QEMU
                uses: docker/setup-qemu-action@v3
            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3
            -   name: Build and push
                uses: docker/build-push-action@v6
                with:
                    context: .
                    file: ./release.Dockerfile
                    platforms: linux/amd64
                    push: true
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}
